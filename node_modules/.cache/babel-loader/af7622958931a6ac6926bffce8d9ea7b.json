{"ast":null,"code":"var _jsxFileName = \"/home/gurpreet/Desktop/colorgenerator/src/menu.js\";\nimport React from 'react';\nimport './menu.css';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst generateRandomColor = () => {\n  let color = ['#'];\n  let options = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n  let num = 0;\n\n  for (let i = 0; i < 6; i++) {\n    num = Math.floor(Math.random() * options.length);\n  }\n};\n\nconst handleGenerate = () => {};\n\nexport const Menu = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: \" Color Gradient Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerate,\n        className: \"generatorButton\",\n        onClick: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generatorContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"generatorIcon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_c = Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/home/gurpreet/Desktop/colorgenerator/src/menu.js"],"names":["React","useDispatch","generateRandomColor","color","options","num","i","Math","floor","random","length","handleGenerate","Menu"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AAEA,SAASC,WAAT,QAA4B,aAA5B;;;AAGA,MAAMC,mBAAmB,GAAG,MAAM;AAC9B,MAAIC,KAAK,GAAG,CAAC,GAAD,CAAZ;AACA,MAAIC,OAAO,GAAG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,EAA6B,GAA7B,EAAiC,GAAjC,EAAqC,GAArC,EAAyC,GAAzC,EAA6C,GAA7C,EAAiD,GAAjD,EAAqD,GAArD,EAAyD,GAAzD,EAA6D,GAA7D,CAAd;AACA,MAAIC,GAAG,GAAG,CAAV;;AAEA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EAAoB;AAChBD,IAAAA,GAAG,GAAGE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,OAAO,CAACM,MAAnC,CAAN;AAEH;AACJ,CATD;;AAYA,MAAMC,cAAc,GAAG,MAAM,CAE5B,CAFD;;AAIA,OAAO,MAAMC,IAAI,GAAG,MAAM;AACtB,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAED,cAAjB;AAAgC,QAAA,SAAS,EAAC,iBAA1C;AAA4D,QAAA,OAAO,EAAC,EAApE;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAdM;KAAMC,I","sourcesContent":["import React from 'react';\nimport './menu.css';\n\nimport { useDispatch } from 'react-redux';\n\n\nconst generateRandomColor = () => {\n    let color = ['#'];\n    let options = ['0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'];\n    let num = 0;\n\n    for(let i=0;i<6;i++){\n        num = Math.floor(Math.random() * options.length);\n        \n    }\n}\n\n\nconst handleGenerate = () => {\n\n} \n\nexport const Menu = () => {\n    return (\n        <div className=\"menu\">\n            <div className=\"logo\"> Color Gradient Generator</div>\n            <div >\n                <button onClick={handleGenerate}className=\"generatorButton\" onClick=''>\n                    <div className=\"generatorContainer\">\n                        <div>Generate</div> \n                        <div className=\"generatorIcon\"></div>\n                    </div> \n                </button>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}